{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Imagen.js","components/ListadoImagenes.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Formulario","setBusqueda","useState","termino","setTermino","error","setError","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","rel","ListadoImagenes","imagenes","map","key","id","App","busqueda","setImagenes","paginaActual","setPaginaActual","numeroPaginas","setNumeroPaginas","useEffect","a","imagenesPorPagina","url","fetch","respuesta","json","resultado","hits","calcularTotalPaginas","Math","ceil","totalHits","document","querySelector","scrollIntoView","behavior","buscarAPI","onClick","nuevaPaginaActual","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"4KAMeA,EAJD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,uBAAGC,UAAU,4CAA4CD,ICuCnDE,EAvCI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACRC,mBAAS,IADD,mBAC/BC,EAD+B,KACtBC,EADsB,OAEZF,oBAAS,GAFG,mBAE/BG,EAF+B,KAExBC,EAFwB,KAetC,OACE,0BAAMC,SAbe,SAACC,GACtBA,EAAEC,iBAEqB,KAAnBN,EAAQO,QAKZJ,GAAS,GAETL,EAAYE,IANVG,GAAS,KAUT,yBAAKP,UAAU,OACb,yBAAKA,UAAU,uBACb,2BACEY,KAAK,OACLZ,UAAU,+BACVa,YAAY,sBACZC,SAAU,SAACL,GAAD,OAAOJ,EAAWI,EAAEM,OAAOC,WAGzC,yBAAKhB,UAAU,uBACb,2BACEY,KAAK,SACLZ,UAAU,kCACVgB,MAAM,aAIXV,EAAQ,kBAAC,EAAD,CAAOP,QAAQ,yBAA4B,OCR3CkB,EA3BA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACRC,EAAkDD,EAAlDC,cAAeC,EAAmCF,EAAnCE,MAAOC,EAA4BH,EAA5BG,WAAYC,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,MAEhD,OACE,yBAAKvB,UAAU,0CACb,yBAAKA,UAAU,QACb,yBAAKwB,IAAKH,EAAYI,IAAKH,EAAMtB,UAAU,iBAC3C,yBAAKA,UAAU,aACZ,IACD,uBAAGA,UAAU,aAAaoB,EAA1B,aACA,uBAAGpB,UAAU,aAAauB,EAA1B,YAEF,yBAAKvB,UAAU,eACb,uBACE0B,KAAMP,EACNJ,OAAO,SACPY,IAAI,sBACJ3B,UAAU,6BAJZ,kBCFK4B,EAVS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,yBAAK7B,UAAU,kBACZ6B,EAASC,KAAI,SAACZ,GAAD,OACZ,kBAAC,EAAD,CAAQa,IAAKb,EAAOc,GAAId,OAAQA,SCoEzBe,MAvEf,WAAgB,IAAD,EACmB9B,mBAAS,IAD5B,mBACN+B,EADM,KACIhC,EADJ,OAEmBC,mBAAS,IAF5B,mBAEN0B,EAFM,KAEIM,EAFJ,OAG2BhC,mBAAS,GAHpC,mBAGNiC,EAHM,KAGQC,EAHR,OAI6BlC,mBAAS,GAJtC,mBAINmC,EAJM,KAISC,EAJT,KAwCb,OAlCAC,qBAAU,WACHN,GAEU,uCAAG,oCAAAO,EAAA,6DACVC,EAAoB,GACX,qCACTC,EAHU,uCAED,qCAFC,cAGwCT,EAHxC,qBAG6DQ,EAH7D,iBAGuFN,GAHvF,SAIQQ,MAAMD,GAJd,cAIVE,EAJU,gBAKQA,EAAUC,OALlB,OAKVC,EALU,OAMhBZ,EAAYY,EAAUC,MAEhBC,EAAuBC,KAAKC,KAChCJ,EAAUK,UAAYV,GAExBH,EAAiBU,GAEEI,SAASC,cAAc,cAChCC,eAAe,CAACC,SAAS,WAdnB,4CAAH,oDAiBfC,KACC,CAACvB,EAAUE,IAcZ,yBAAKpC,UAAU,aACb,yBAAKA,UAAU,aACb,uBAAGA,UAAU,oBAAb,2BACA,kBAAC,EAAD,CAAYE,YAAaA,KAE3B,yBAAKF,UAAU,IACb,kBAAC,EAAD,CAAiB6B,SAAUA,IACT,IAAjBO,EAAqB,KACpB,4BACExB,KAAK,SACLZ,UAAU,oBACV0D,QAvBa,WACrB,IAAMC,EAAoBvB,EAAe,EACzC,GAA0B,IAAtBuB,EAAyB,OAAO,KACpCtB,EAAgBsB,KAiBV,gBAQDvB,IAAiBE,EAAgB,KAChC,4BACE1B,KAAK,SACLZ,UAAU,oBACV0D,QA1Bc,WACtB,IAAMC,EAAoBvB,EAAe,EACzC,GAAIuB,EAAoBrB,EAAe,OAAO,KAC9CD,EAAgBsB,KAoBV,oBClDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFd,SAASe,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArE,GACLsE,QAAQtE,MAAMA,EAAMuE,a","file":"static/js/main.c8ae30b4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Error = ({ mensaje }) => {\r\n  return <p className=\"my-3 p-3 text-center alert alert-primary\">{mensaje}</p>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport Error from \"./Error\";\r\n\r\nconst Formulario = ({ setBusqueda }) => {\r\n  const [termino, setTermino] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const buscarImagenes = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (termino.trim() === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n\r\n    setBusqueda(termino);\r\n  };\r\n  return (\r\n    <form onSubmit={buscarImagenes}>\r\n      <div className=\"row\">\r\n        <div className=\"form-group col-md-8\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-lg\"\r\n            placeholder=\"Busca una imágen\"\r\n            onChange={(e) => setTermino(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-lg btn-danger btn-block\"\r\n            value=\"Buscar\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {error ? <Error mensaje=\"Ingresa una busqueda\" /> : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\n\r\nconst Imagen = ({ imagen }) => {\r\n  const { largeImageURL, likes, previewURL, tags, views } = imagen;\r\n\r\n  return (\r\n    <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n      <div className=\"card\">\r\n        <img src={previewURL} alt={tags} className=\"card-img-top\" />\r\n        <div className=\"card-body\">\r\n          {\" \"}\r\n          <p className=\"card-text\">{likes} Me gusta</p>\r\n          <p className=\"card-text\">{views} Vistas</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <a\r\n            href={largeImageURL}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"btn btn-primary btn-block\"\r\n          >\r\n            Ver Imagen\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Imagen;\r\n","import React from \"react\";\r\nimport Imagen from \"./Imagen\";\r\n\r\nconst ListadoImagenes = ({ imagenes }) => {\r\n  return (\r\n    <div className=\"col-12 p-5 row\">\r\n      {imagenes.map((imagen) => (\r\n        <Imagen key={imagen.id} imagen={imagen} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListadoImagenes;\r\n","import React, { useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport ListadoImagenes from \"./components/ListadoImagenes\";\n\nfunction App() {\n  const [busqueda, setBusqueda] = useState(\"\");\n  const [imagenes, setImagenes] = useState([]);\n  const [paginaActual, setPaginaActual] = useState(1);\n  const [numeroPaginas, setNumeroPaginas] = useState(1);\n\n  useEffect(() => {\n    if (!busqueda) return;\n\n    const buscarAPI = async () => {\n      const imagenesPorPagina = 30;\n      const apiKey = \"15892069-cc6ef7155a8970eb64f3e719b\";\n      const url = `https://pixabay.com/api/?key=${apiKey}&q=${busqueda}&per_page=${imagenesPorPagina}&page=${paginaActual}`;\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n      setImagenes(resultado.hits);\n      // Calcular el numero de paginas\n      const calcularTotalPaginas = Math.ceil(\n        resultado.totalHits / imagenesPorPagina\n      );\n      setNumeroPaginas(calcularTotalPaginas);\n      // Al hacer un llamado, ver la pantalla en el inicio\n      const jumbotron =  document.querySelector('.jumbotron');\n      jumbotron.scrollIntoView({behavior:'smooth'});\n    };\n\n    buscarAPI();\n  }, [busqueda, paginaActual]);\n\n  const paginaAnterior = () => {\n    const nuevaPaginaActual = paginaActual - 1;\n    if (nuevaPaginaActual === 0) return null;\n    setPaginaActual(nuevaPaginaActual);\n  };\n\n  const paginaSiguiente = () => {\n    const nuevaPaginaActual = paginaActual + 1;\n    if (nuevaPaginaActual > numeroPaginas) return null;\n    setPaginaActual(nuevaPaginaActual);\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <p className=\"lead text-center\">Buscador de Imágenes</p>\n        <Formulario setBusqueda={setBusqueda} />\n      </div>\n      <div className=\"\">\n        <ListadoImagenes imagenes={imagenes} />\n        {paginaActual === 1 ? null : (\n          <button\n            type=\"button\"\n            className=\"btn btn-info mr-1\"\n            onClick={paginaAnterior}\n          >\n            &laquo;Anterior\n          </button>\n        )}\n        {paginaActual === numeroPaginas ? null : (\n          <button\n            type=\"button\"\n            className=\"btn btn-info mr-1\"\n            onClick={paginaSiguiente}\n          >\n            Siguiente&raquo;\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}